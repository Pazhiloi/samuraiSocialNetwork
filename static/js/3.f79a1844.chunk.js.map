{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,iBAAmB,wC,+LCetBC,EAdF,SAACC,GAEZ,OACC,sBAAKC,UAAWC,IAAEC,KAAlB,UACK,qBAAKC,IAAI,wDAAwDC,IAAI,KACpEL,EAAMM,QACP,gCACA,wCADA,IACmBN,EAAMO,kBCF3BC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,yBAAjBD,EAdL,SAACX,GACtB,OACE,uBAAMa,SAAUb,EAAMc,aAAtB,UACI,8BACA,cAACC,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWC,IAAUC,YAAa,eAC5DC,SAAU,CAACC,IAAUb,OAErB,8BACE,sDA6BKc,EArBCC,IAAMC,MAAK,SAACxB,GAE1B,IAAIyB,EAAgBzB,EAAM0B,MAAMC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAMtB,QAASsB,EAAEtB,QAASC,WAAYqB,EAAErB,gBAIhF,OACK,sBAAKN,UAAWC,IAAE2B,WAAlB,UACA,0CACA,cAACnB,EAAD,CAAqBG,SANX,SAACiB,GACf9B,EAAM+B,QAAQD,EAAOE,gBAMjB,qBAAK/B,UAAWC,IAAEwB,MAAlB,SACCD,UCfMQ,EAFUC,aAdD,SAACC,GACvB,MAAM,CACJT,MAAOS,EAAMC,YAAYV,MACzBM,YAAaG,EAAMC,YAAYJ,gBAGR,SAACK,GAC1B,MAAM,CACFN,QAAS,SAACC,GACRK,EAASC,YAAqBN,QAKbE,CAA8CZ,G,mCCiBxDiB,EAlCgB,SAACvC,GAE5B,MAAgCwC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BF,mBAASxC,EAAM2C,QAA3C,mBAAOA,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRD,EAAU5C,EAAM2C,UACf,CAAC3C,EAAM2C,SAWR,OACE,iCACEF,GACE,8BACI,sBAAMK,cAdM,WACtBJ,GAAY,IAaF,SAAwC1C,EAAM2C,QAAU,UAG7DF,GACC,8BACI,uBAAOM,SAZE,SAACC,GACtBJ,EAAUI,EAAEC,cAAcC,QAWmBC,OAhBnB,WAC1BT,GAAY,GACZ1C,EAAMoD,aAAaT,IAcsDO,MAAOP,UCXrEU,EAdK,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,QAASX,EAA0B,EAA1BA,OAAQS,EAAkB,EAAlBA,aACrC,OAAKE,EAIH,8BACA,sBAAKrD,UAAWC,IAAEqD,iBAAlB,UACE,qBAAKnD,IAAKkD,EAAQE,OAAOC,MAAOpD,IAAI,KACpC,cAAC,EAAD,CAAwBsC,OAAQA,EAAQS,aAAcA,SANjD,cAACM,EAAA,EAAD,KCQIC,EAXC,SAAC3D,GACf,OACE,gCACA,cAAC,EAAD,CAAasD,QAAStD,EAAMsD,QAASX,OAAQ3C,EAAM2C,OAAQS,aAAcpD,EAAMoD,eAC/E,cAAC,EAAD,Q,cCDGQ,E,uKACL,WACE,IAAIC,EAASC,KAAK9D,MAAM+D,MAAMC,OAAOH,OAChCA,IACHA,EAASC,KAAK9D,MAAMiE,mBAElBH,KAAK9D,MAAMkE,QAAQC,KAAK,UAG5BL,KAAK9D,MAAMoE,eAAeP,GAC1BC,KAAK9D,MAAMqE,UAAUR,K,oBAGvB,WACG,OACD,cAAC,EAAD,2BACIC,KAAK9D,OADT,IAEAsD,QAASQ,KAAK9D,MAAMsD,QACpBX,OAAQmB,KAAK9D,MAAM2C,OACnBS,aAAcU,KAAK9D,MAAMoD,oB,GAnBG7B,IAAM+C,WAoCvBC,sBACbrC,aATsB,SAACC,GAAD,MAAY,CAClCmB,QAASnB,EAAMC,YAAYkB,QAC3BX,OAAQR,EAAMC,YAAYO,OAC1BsB,iBAAkB9B,EAAMqC,KAAKX,OAC7BY,OAAQtC,EAAMqC,KAAKC,UAKM,CAACL,mBAAgBC,cAAWjB,mBACrDsB,IAFaH,CAGbX","file":"static/js/3.f79a1844.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__UO5wj\",\"posts\":\"MyPosts_posts__3clZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__OGHaJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1d_md\"};","import React from 'react';\r\nimport s from  './Post.module.css'\r\nconst Post = (props) => {\r\n\r\n  return (\r\n   <div className={s.item}>\r\n        <img src=\"https://cdn-icons-png.flaticon.com/512/147/147144.png\" alt=\"\" />\r\n        {props.message}\r\n        <div>\r\n        <span>Like</span> {props.likesCount}\r\n        </div>\r\n        \r\n        </div>\r\n  );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from  './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) =>{\r\n  return(\r\n    <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n        <Field name='newPostText' component={Textarea} placeholder={'Post message'} \r\n        validate={[required, maxLength10, ]} />\r\n        </div>\r\n        <div>\r\n          <button>Add Post</button>\r\n        </div>\r\n        </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo((props) =>{\r\n\r\n  let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n   return (\r\n        <div className={s.postsBlock}>\r\n        <h3>My posts</h3> \r\n        <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n        <div className={s.posts}>\r\n        {postsElements}\r\n        </div>\r\n        \r\n        </div>\r\n  );\r\n \r\n});\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator} from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n      addPost: (newPostText) => {\r\n        dispatch(addPostActionCreator(newPostText));\r\n  }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n      setStatus(props.status)\r\n    }, [props.status])\r\n   const activateEditMode = () =>{\r\n      setEditMode(true);\r\n    }\r\n   const deactivateEditMode = () =>{\r\n    setEditMode(false)\r\n    props.updateStatus(status)\r\n  }\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n      return (\r\n        <div>\r\n        {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '---' }</span>\r\n            </div>\r\n          }\r\n          {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n          }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader/>\r\n  }\r\n  return (\r\n    <div>\r\n    <div className={s.descriptionBlock}>\r\n      <img src={profile.photos.large} alt=\"\" />\r\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nconst Profile = (props) => {   \r\n  return (\r\n    <div>\r\n    <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n    <MyPostsContainer/>\r\n    </div>\r\n\r\n       \r\n  );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getStatus, getUserProfile, updateStatus } from '../../Redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nclass  ProfileContainer extends React.Component {   \r\n  componentDidMount(){\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId\r\n      if(!userId){\r\n        this.props.history.push('/login')\r\n      } \r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  render(){\r\n     return (\r\n    <Profile \r\n    {...this.props} \r\n    profile={this.props.profile} \r\n    status={this.props.status} \r\n    updateStatus={this.props.updateStatus}/>\r\n  )\r\n  }\r\n \r\n};\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}